<?xml version="1.0"?>
<data>
    <query id="get_pitcher_basic_record">
		SELECT RANK, SUBJECT, OPPONENT, LEAGUE, GYEAR, HITTER, HITNAME, HITTEAM
		, PITCHER, PITNAME, PITTEAM, PA, INN, GAME_NUM, STATE, STATE_SPLIT, RESULT, RATE
		FROM  
		( 
			SELECT DENSE_RANK() OVER(PARTITION BY GYEAR, STATE ORDER BY RESULT DESC) AS RANK 
							, SUBJECT, OPPONENT, LEAGUE, GYEAR, HITTER, HITNAME, HITTEAM, PITCHER, PITNAME, PITTEAM 
							, PA, INN, GAME_NUM, STATE, STATE_SPLIT, RESULT, RATE
			FROM baseball.accum_record_pitcher 
			WHERE GYEAR IN ('NA', 2017)
			{1} 
			AND HITTEAM = 'NA'  
			AND STATE_SPLIT = 'BASIC' 
			AND OPPONENT = 'ALL'
		) AAA 
		WHERE PITCHER = '{0}' 
    </query>
	
	<query id="get_pitcher_vs_team_record">
		SELECT RANK, SUBJECT, OPPONENT, LEAGUE, GYEAR, HITTER, HITNAME, HITTEAM
					       , PITCHER, PITNAME, PITTEAM, PA, INN, GAME_NUM, STATE, STATE_SPLIT, RESULT, RATE
		FROM  
		( 
			SELECT DENSE_RANK() OVER(PARTITION BY GYEAR, STATE ORDER BY RESULT DESC) AS RANK 
					, SUBJECT, OPPONENT, LEAGUE, GYEAR, HITTER, HITNAME, HITTEAM, PITCHER, PITNAME, PITTEAM 
					, PA, INN, GAME_NUM, STATE, STATE_SPLIT, RESULT, RATE
			FROM baseball.accum_record_pitcher 
			WHERE GYEAR IN ('NA', 2017)
			{1} 
			{2} 
			AND OPPONENT = 'TEAM' 
			AND STATE_SPLIT = 'VERSUS_TEAM' 
		) AAA 
		WHERE PITCHER = '{0}' 
    </query>

	<query id="get_pitcher_vs_hitter_record">
		SELECT RANK, SUBJECT, OPPONENT, LEAGUE, GYEAR, HITTER, HITNAME, HITTEAM
					       , PITCHER, PITNAME, PITTEAM, PA, INN, GAME_NUM, STATE, STATE_SPLIT, RESULT, RATE
		FROM  
		( 
			SELECT DENSE_RANK() OVER(PARTITION BY GYEAR, STATE ORDER BY RESULT DESC) AS RANK 
					, SUBJECT, OPPONENT, LEAGUE, GYEAR, HITTER, HITNAME, HITTEAM, PITCHER, PITNAME, PITTEAM 
					, PA, INN, GAME_NUM, STATE, STATE_SPLIT, RESULT, RATE
			FROM baseball.accum_record_pitcher 
			WHERE GYEAR = 'NA'
			AND OPPONENT = 'HITTER' 
			AND HITTEAM = 'NA'
			AND HITTER = '{1}'
			AND STATE_SPLIT = 'VERSUS_HITTER' 
			{2}
		) AAA 
		WHERE PITCHER = '{0}' 
    </query>
	
	<query id="get_pitcher_basic_total_record">
		SELECT A.PCODE AS PITCHER, A.NAME AS PITNAME, A.GYEAR, A.TEAM, ROUND(A.ERA, 3) AS ERA, A.GAMENUM, A.CG, A.SHO, A.W, A.L, A.SV, A.HOLD, A.BF
		, A.INN, A.INN2, A.HIT, A.HR, A.BB, A.HP, A.KK, A.R, A.ER, A.SCORE, A.INNG, A.INNK, A.QS, ROUND(A.OPS, 3) AS OPS, ROUND(A.WHIP, 3) AS WHIP, A.INNB
		, A.KK_BB_RT, A.PA_BB_RT, A.PA_KK_RT, A.WRA
		, 'STARTING' AS STATE
		, 'STARTING_SEASON' AS STATE_SPLIT
		, 'SEASON' AS LEAGUE
		, (SELECT CASE WHEN SUM(START) IS NULL THEN 0 ELSE SUM(START) END SUM_START FROM baseball.pitcher WHERE pcode = A.PCODE AND substring(gday, 1, 4) = A.GYEAR) AS STARTING_NUM
		FROM baseball.pittotal_extra A
		WHERE A.pcode = '{0}'
    </query>
	
	<query id="get_previous_game_pitcher_record">
		SELECT CASE WHEN tb = 'B' THEN SUBSTRING(gmkey, 9, 2) ELSE SUBSTRING(gmkey, 11, 2) END AS TEAM
		, GDAY, NAME, SUBSTRING(POS, 1, 1) AS POS, `START`, CG, SHO, WLS, HOLD, INN, INN2, BF, HIT, HR, ERR, R, ER
		, DAY(GDAY) AS DAY
		, 'STARTING' AS STATE
		, 0 AS RESULT
		, CASE WHEN CG > 0 AND WLS = 'W' THEN 'PREV_GAME_CG_W'
						WHEN CG > 0 AND WLS = 'L' THEN 'PREV_GAME_CG_L'
						WHEN SHO > 0 THEN 'PREV_GAME_SHO'
						WHEN WLS = 'W' THEN 'PREV_GAME_WINNER' 
						WHEN WLS = 'L' THEN 'PREV_GAME_LOSER'
						ELSE 'PREV_GAME' END AS STATE_SPLIT
		, 'SEASON' AS LEAGUE
		FROM baseball.pitcher
		WHERE gday &lt; '{0}'
		AND pcode = '{1}'
		ORDER BY gday desc
		LIMIT 1
	</query>
	
	<query id="get_pitcher_gamenum_cnt">
		SELECT COUNT(GAMENUM) AS GAMENUM
		FROM 
		(
			SELECT PCODE, ROUND(SUM(GAMENUM)/2) AS GAMENUM
			FROM baseball.pittotal A
			GROUP BY PCODE
		) A
		WHERE GAMENUM >= {}
	</query>
	
	<query id="get_pitcher_gamenum">
		SELECT ROUND(SUM(GAMENUM)/2) + 1 AS GAMENUM
		FROM baseball.pittotal
		WHERE PCODE = '{}'
	</query>
	
</data>